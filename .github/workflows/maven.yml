name: Maven Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 20
      uses: actions/setup-java@v2
      with:
        java-version: '20'
        distribution: 'adopt'

    - name: Build com Maven
      run: mvn -B package --file pom.xml

    - name: Criando o diretório para o Build do JAR
      run: mkdir ./jar-upload

    - name: Copy JAR to Separate Directory
      run: cp ./target/*.jar ./jar-upload

      
    - name: Enviando os JAR por FTP
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./jar-upload/
        server-dir: ~/appservers/standalone/

    - name: Install SSH Client
      run: sudo apt-get install openssh-client sshpass

    - name: Setup SSH Key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan cloud35.integrator.host >> ~/.ssh/known_hosts
    
    - name: Check Known Hosts File
      run: cat ~/.ssh/known_hosts
        
    - name: Teste de conexão SSH
      env:
        SSH_KEY_PASSPHRASE: ${{ secrets.REMOTE_SSH_KEY_PASS }}
        SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
        SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
      run: |
        sshpass -p $SSH_KEY_PASSPHRASE ssh -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_ADDRESS echo "SSH connection successful"
